int isrtContactAlpha(contact *isrtContact, struct contactArray *contactBook) // will need string.h
{
// Allocate more space to our contact array so we can add a contact
	if(contactBook->contacts == NULL)
	{
		contactBook->contacts = (contact*)malloc(((contactBook->numOfContacts)+1) * sizeof(contact));
		if (contactBook->contacts == NULL) { return -1; }	// If memory couldn't be aquired to expand list return -1 )fail(
	} else {
		contact *newContacts = realloc((contactBook->contacts), (((contactBook->numOfContacts)+1) * sizeof(contact)));
		if (!newContacts) { return -1; }	// If memory couldn't be aquired to expand list return -1 )fail(
		(contactBook->contacts) = newContacts;	// Set our old ponter to the same location as our new pointer
	}
	(contactBook->numOfContacts)++;	// Increase the number of contacts by one
	
// Find what location in our array we want to put our new contact in
	for((contactBook->contactsPointer) = 0; (contactBook->contactsPointer) < (contactBook->numOfContacts); (contactBook->contactsPointer)++)
	{
		contact curContact = contactBook->contacts[contactBook->contactsPointer];
		if (strcmp((isrtContact->sLastName), curContact.sLastName) < 0) {
			break; }
	}
	contactBook->contactsPointer--; 
	
// Insert our new contact moving everything to the right of it over one
	
	for(; (contactBook->contactsPointer) < (contactBook->numOfContacts); (contactBook->contactsPointer)++)
	{
		contact tempContact = contactBook->contacts[contactBook->contactsPointer];
		*((contactBook->contacts) + (contactBook->contactsPointer)) = *isrtContact;
		*isrtContact = tempContact;
	}
}